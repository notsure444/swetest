# docker/nginx/nginx.conf
# Nginx configuration for routing and project isolation

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'project="$http_x_project_namespace"';
    
    access_log /var/log/nginx/access.log main;
    
    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";

    # Rate limiting for project isolation
    limit_req_zone $http_x_project_namespace zone=project_limit:10m rate=10r/s;
    limit_req_zone $remote_addr zone=ip_limit:10m rate=20r/s;

    # Upstream definitions
    upstream convex_backend {
        server convex-backend:3210;
    }
    
    upstream dashboard {
        server dashboard:3000;
    }

    # Main server block
    server {
        listen 80;
        server_name localhost;
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Dashboard (main interface)
        location / {
            limit_req zone=ip_limit burst=20 nodelay;
            proxy_pass http://dashboard;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for real-time updates
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_cache_bypass $http_upgrade;
        }
        
        # Convex backend API
        location /api/convex/ {
            limit_req zone=ip_limit burst=30 nodelay;
            proxy_pass http://convex_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Add project namespace header for isolation
            proxy_set_header X-Project-Namespace $http_x_project_namespace;
        }
        
        # Project-specific routing (dynamic projects)
        location ~ ^/projects/([a-zA-Z0-9_-]+)/(.*)$ {
            set $project_namespace $1;
            set $project_path $2;
            
            # Apply project-specific rate limiting
            limit_req zone=project_limit burst=10 nodelay;
            
            # Route to project container
            proxy_pass http://$project_namespace_dev/$project_path;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Project-Namespace $project_namespace;
            
            # Security headers for project isolation
            add_header X-Project-Namespace $project_namespace;
            add_header X-Isolation-Level "container";
        }
        
        # Monitoring endpoints
        location /monitoring/ {
            proxy_pass http://grafana:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        # Deny access to sensitive files
        location ~ /\. {
            deny all;
        }
        
        location ~ \.(env|config|key)$ {
            deny all;
        }
    }

    # Include additional server configurations for project isolation
    include /etc/nginx/conf.d/*.conf;
}
