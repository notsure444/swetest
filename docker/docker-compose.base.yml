# docker/docker-compose.base.yml
# Base Docker Compose configuration for shared services
version: '3.8'

networks:
  convex_shared:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
  
volumes:
  convex_data:
  dashboard_node_modules:
  shared_cache:

services:
  # Convex Backend Service (shared across all projects)
  convex-backend:
    image: convex/backend:latest
    container_name: convex_backend
    restart: unless-stopped
    networks:
      - convex_shared
    ports:
      - "3210:3210"  # Convex dev server
    volumes:
      - ../convex:/app/convex:ro
      - ../package.json:/app/package.json:ro
      - ../package-lock.json:/app/package-lock.json:ro
      - convex_data:/app/data
      - shared_cache:/app/.cache
    environment:
      - NODE_ENV=production
      - CONVEX_DEPLOYMENT=${CONVEX_DEPLOYMENT:-dev}
      - CONVEX_SITE_URL=${CONVEX_SITE_URL:-http://localhost:3000}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3210/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # AI-Assisted Dashboard (shared frontend)
  dashboard:
    build:
      context: ../dashboard
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    container_name: convex_dashboard
    restart: unless-stopped
    networks:
      - convex_shared
    ports:
      - "3000:3000"
    volumes:
      - ../dashboard:/app/src:ro
      - dashboard_node_modules:/app/node_modules
    environment:
      - NEXT_PUBLIC_CONVEX_URL=${NEXT_PUBLIC_CONVEX_URL:-http://convex-backend:3210}
      - NODE_ENV=production
    depends_on:
      convex-backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: convex_redis
    restart: unless-stopped
    networks:
      - convex_shared
    ports:
      - "6379:6379"
    volumes:
      - ../docker/redis/redis.conf:/etc/redis/redis.conf
      - convex_data:/data
    command: redis-server /etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy for routing and load balancing
  nginx:
    image: nginx:alpine
    container_name: convex_nginx
    restart: unless-stopped
    networks:
      - convex_shared
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ../docker/ssl:/etc/ssl:ro
    depends_on:
      - dashboard
      - convex-backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Monitoring and logging
  prometheus:
    image: prom/prometheus:latest
    container_name: convex_prometheus
    restart: unless-stopped
    networks:
      - convex_shared
    ports:
      - "9090:9090"
    volumes:
      - ../docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - convex_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'

  grafana:
    image: grafana/grafana:latest
    container_name: convex_grafana
    restart: unless-stopped
    networks:
      - convex_shared
    ports:
      - "3001:3000"
    volumes:
      - convex_data:/var/lib/grafana
      - ../docker/grafana/grafana.ini:/etc/grafana/grafana.ini:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
